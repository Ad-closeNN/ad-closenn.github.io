import{_ as a,B as p,c as l,j as s,a as n,G as r,a0 as i,o}from"./chunks/framework.lCAK80e3.js";const g="/assets/Download%20Gpg4win.yk29WnYZ.png",d="/assets/0%20Download.6xfqXLHX.png",u="/assets/Kleopatra%20on%20start.CRy7zMUi.png",b="/assets/Create%20PGP.BuYnttLt.png",f="/assets/Export%20Public.Cnp2iloQ.png",G="/assets/Key%20ID.DXP4fRxK.png",H=JSON.parse('{"title":"使 GitHub Desktop 提交时有 Verified 标签","description":"","frontmatter":{},"headers":[],"relativePath":"docs/GitHub Desktop GPG.md","filePath":"docs/GitHub Desktop GPG.md","lastUpdated":null}'),m={name:"docs/GitHub Desktop GPG.md"},k={class:"details custom-block"};function P(w,t,y,x,v,D){const e=p("badge");return o(),l("div",null,[t[45]||(t[45]=s("h1",{id:"使-github-desktop-提交时有-verified-标签",tabindex:"-1"},[n("使 GitHub Desktop 提交时有 Verified 标签 "),s("a",{class:"header-anchor",href:"#使-github-desktop-提交时有-verified-标签","aria-label":'Permalink to "使 GitHub Desktop 提交时有 Verified 标签"'},"​")],-1)),s("blockquote",null,[s("p",null,[t[0]||(t[0]=n("当你在 GitHub 网页端提交 Commit 的时候，GitHub 会自动帮你生成一个 ")),t[1]||(t[1]=s("a",{href:"https://zh.wikipedia.org/wiki/GnuPG",target:"_blank",rel:"noreferrer"},"GPG 签名",-1)),t[2]||(t[2]=n("，并在提交旁边显示一个 ")),r(e,{type:"tip",text:"Verified"}),t[3]||(t[3]=n(" 标签，表示这个提交是本人所为的。如果使用的是 ")),t[4]||(t[4]=s("a",{href:"https://desktop.github.com",target:"_blank",rel:"noreferrer"},"GitHub Desktop",-1)),t[5]||(t[5]=n(" 或一些类似于 ")),t[6]||(t[6]=s("a",{href:"https://git-scm.com",target:"_blank",rel:"noreferrer"},"Git",-1)),t[7]||(t[7]=n(" 的工具，那么这个标签在 Commit 的时候没有带上提交者本人的 GPG 签名，这个标签就会显示为空白，代表")),t[8]||(t[8]=s("strong",null,"未验证",-1)),t[9]||(t[9]=n("。这里介绍的是如何让 GitHub Desktop 提交时带上 GPG 签名，从而在提交记录旁边显示 ")),r(e,{type:"tip",text:"Verified"}),t[10]||(t[10]=n(" 标签。"))])]),t[46]||(t[46]=i('<h3 id="准备工具" tabindex="-1">准备工具 <a class="header-anchor" href="#准备工具" aria-label="Permalink to &quot;准备工具&quot;">​</a></h3><ul><li><a href="https://git-scm.com" target="_blank" rel="noreferrer">Git</a> 或 <a href="https://gnupg.org" target="_blank" rel="noreferrer">GunPG</a> 或 <a href="https://www.gpg4win.org" target="_blank" rel="noreferrer">GPG4Win</a></li><li><a href="https://desktop.github.com" target="_blank" rel="noreferrer">GitHub Desktop</a></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://git-scm.com" target="_blank" rel="noreferrer">Git</a> 内包含 <a href="https://gnupg.org" target="_blank" rel="noreferrer">GunPG</a>， <a href="https://www.gpg4win.org" target="_blank" rel="noreferrer">GPG4Win</a> 内也包含 <a href="https://gnupg.org" target="_blank" rel="noreferrer">GunPG</a> ，两者安装任意一个即可。</p><p>只是 <a href="https://git-scm.com" target="_blank" rel="noreferrer">Git</a> 和 <a href="https://gnupg.org" target="_blank" rel="noreferrer">GunPG</a> 都是命令行程序，需要手动输入命令，而 <a href="https://www.gpg4win.org" target="_blank" rel="noreferrer">GPG4Win</a> 是图形化界面程序，使用起来更方便。</p></div>',3)),s("details",k,[t[19]||(t[19]=s("summary",null,[s("a",{href:"https://www.gpg4win.org",target:"_blank",rel:"noreferrer"},"GPG4Win"),n(" 下载步骤")],-1)),s("ol",null,[t[17]||(t[17]=s("li",null,[n("打开 "),s("a",{href:"https://www.gpg4win.org",target:"_blank",rel:"noreferrer"},"GPG4Win"),n(" 官网")],-1)),t[18]||(t[18]=s("li",null,[n("点击"),s("img",{src:g,alt:"Download Gpg4win"})],-1)),s("li",null,[t[11]||(t[11]=n("有能力请")),t[12]||(t[12]=s("strong",null,"赞助",-1)),t[13]||(t[13]=n("作者，若不想赞助也可以点击 ")),r(e,{type:"tip",text:"$0"}),t[14]||(t[14]=n(" 后点击 ")),r(e,{type:"tip",text:"Download"}),t[15]||(t[15]=n(" 进行下载")),t[16]||(t[16]=s("img",{src:d,alt:"$0 Download.png"},null,-1))])])]),t[47]||(t[47]=s("h2",{id:"以-gpg4win-为例",tabindex:"-1"},[n("以 "),s("strong",null,"GPG4Win"),n(" 为例 "),s("a",{class:"header-anchor",href:"#以-gpg4win-为例","aria-label":'Permalink to "以 **GPG4Win** 为例"'},"​")],-1)),t[48]||(t[48]=s("h3",{id:"生成密钥",tabindex:"-1"},[n("生成密钥 "),s("a",{class:"header-anchor",href:"#生成密钥","aria-label":'Permalink to "生成密钥"'},"​")],-1)),s("p",null,[t[20]||(t[20]=n("打开由 ")),t[21]||(t[21]=s("a",{href:"https://www.gpg4win.org",target:"_blank",rel:"noreferrer"},"GPG4Win",-1)),t[22]||(t[22]=n(" 安装后自带的 Kleopatra，可以在开始菜单找到如图程序。 ")),t[23]||(t[23]=s("img",{src:u,alt:"Kleopatra on start"},null,-1)),t[24]||(t[24]=n(" 点击打开 Kleopatra，在顶栏找到并点击 ")),r(e,{type:"info",text:"文件"}),t[25]||(t[25]=n()),r(e,{type:"info",text:"新建 OpenPGP 密钥对...."}),t[26]||(t[26]=n("。"))]),s("p",null,[t[27]||(t[27]=n("在如图所示的窗口内， ")),r(e,{type:"tip",text:"名字"}),t[28]||(t[28]=n(" 填写的是你的 GitHub 用户名（")),t[29]||(t[29]=s("strong",null,"不是昵称",-1)),t[30]||(t[30]=n("）， ")),r(e,{type:"tip",text:"电子邮件地址"}),t[31]||(t[31]=n(" 填写的是你 GitHub 账户目前绑定的邮箱。填写完毕后，可以点击 ")),r(e,{type:"tip",text:"高级设置"}),t[32]||(t[32]=n(" 选择一些其他功能，在这里不多赘述。最终的情况一般如下图所示（高级设置内的选项仅供参考，请以实际为准）。"))]),t[49]||(t[49]=s("p",null,[s("img",{src:b,alt:"Create PGP"})],-1)),t[50]||(t[50]=s("h3",{id:"上传公共密钥",tabindex:"-1"},[n("上传公共密钥 "),s("a",{class:"header-anchor",href:"#上传公共密钥","aria-label":'Permalink to "上传公共密钥"'},"​")],-1)),s("p",null,[t[33]||(t[33]=n("在 ")),t[34]||(t[34]=s("a",{href:"https://www.gpg4win.org",target:"_blank",rel:"noreferrer"},"GPG4Win",-1)),t[35]||(t[35]=n(" 主界面内右键选择用户，然后点击 ")),r(e,{type:"tip",text:"导出"}),t[36]||(t[36]=n("，将密钥保存到本地。")),t[37]||(t[37]=s("img",{src:f,alt:"Export Public"},null,-1)),t[38]||(t[38]=n(" 找到刚刚导出的密钥文件，使用文本编辑工具（比如记事本）打开并复制全部内容。复制的内容应为如下格式。"))]),t[51]||(t[51]=i(`<div class="language-.asc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">.asc</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----BEGIN PGP PUBLIC KEY BLOCK-----</span></span>
<span class="line"><span>//公钥部分，实际应为一大串字母</span></span>
<span class="line"><span>-----END PGP PUBLIC KEY BLOCK-----</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>接下来的步骤需要登录你的 <a href="https://github.com" target="_blank" rel="noreferrer">GitHub</a> 账号，并确保你的邮箱是已验证的状态。</p></div>`,2)),s("p",null,[t[39]||(t[39]=n("打开 ")),t[40]||(t[40]=s("a",{href:"https://github.com/settings/gpg/new",target:"_blank",rel:"noreferrer"},"GitHub GPG 密钥创建页面",-1)),t[41]||(t[41]=n(" ，填写 ")),r(e,{type:"tip",text:"Title"}),t[42]||(t[42]=n("(标题) ，并将刚刚复制的公钥粘贴到 ")),r(e,{type:"tip",text:"Key"}),t[43]||(t[43]=n(" 栏内，确认无误后点击 ")),r(e,{type:"tip",text:"Add GPG key"}),t[44]||(t[44]=n(" 即可。"))]),t[52]||(t[52]=i('<h3 id="配置-gitconfig-文件" tabindex="-1">配置 .gitconfig 文件 <a class="header-anchor" href="#配置-gitconfig-文件" aria-label="Permalink to &quot;配置 .gitconfig 文件&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>请确保你的电脑中安装有 <a href="https://desktop.github.com" target="_blank" rel="noreferrer">GitHub Desktop</a> ，并且已经登录了你的 <a href="https://github.com" target="_blank" rel="noreferrer">GitHub</a> 账号。</p></div><p>打开文件 <code>C:\\Users\\你的用户名\\.gitconfig</code>，其中 <code>你的用户名</code> 需替换成你当前登录到的用户。打开 <code>.gitconfig</code> 并添加如下内容。</p><p>在 <code>[user]</code> 中添加 <code>signingkey = </code> Key ID 后16位。其中 <code>Key ID 后16位</code> 需替换成你刚刚在 <a href="https://github.com/settings/keys" target="_blank" rel="noreferrer">GitHub GPG Keys 页面</a> 上添加的公钥的 Key ID 后16位，如 <code>A71099846BA37D4C</code> 。如图所示。 <img src="'+G+`" alt="Key ID"></p><p>然后添加</p><div class="language-.gitconfig vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">.gitconfig</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[commit]</span></span>
<span class="line"><span>	gpgsign = true</span></span></code></pre></div><p>最终 <code>.gitconfig</code> 文件内容如下。</p>`,7)),r(e,{type:"danger",text:"内容仅供参考"}),r(e,{type:"danger",text:"内容仅供参考"}),r(e,{type:"danger",text:"内容仅供参考"}),t[53]||(t[53]=i(`<div class="language-.gitconfig vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">.gitconfig</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[user]</span></span>
<span class="line"><span>	name = Ad-closeNN</span></span>
<span class="line"><span>	email = 1709***095@qq.com</span></span>
<span class="line"><span>	signingkey = A71099846BA37D4C</span></span>
<span class="line"><span>[init]</span></span>
<span class="line"><span>	defaultBranch = main</span></span>
<span class="line"><span>[commit]</span></span>
<span class="line"><span>	gpgsign = true</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>每个人的 <code>.gitconfig</code> 文件内容可能不同，这里给出的是参考内容，请以实际为准（尽量只增不删）。</p><p>如果 <code>.gitconfig</code> 文件不存在，请自行创建。格式供参考，建议使用 <a href="https://desktop.github.com" target="_blank" rel="noreferrer">GitHub Desktop</a> 或 <a href="https://git-scm.com" target="_blank" rel="noreferrer">Git</a> 进行生成 <code>.gitconfig</code> 。</p><div class="language-.gitconfig vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">.gitconfig</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[user]</span></span>
<span class="line"><span>	name = &lt;用户名&gt;</span></span>
<span class="line"><span>	email = &lt;电子邮箱地址&gt;</span></span>
<span class="line"><span>	signingkey = &lt;公钥 ID 后16位&gt;</span></span>
<span class="line"><span>[commit]</span></span>
<span class="line"><span>	gpgsign = true</span></span></code></pre></div></div>`,2))])}const K=a(m,[["render",P]]);export{H as __pageData,K as default};
